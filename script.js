window.onload = function() {
  const supabaseUrl = 'https://xpxaqlgasrlnxmpuhpgn.supabase.co';
  const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhweGFxbGdhc3JsbnhtcHVocGduIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE4NzQ3NDcsImV4cCI6MjA2NzQ1MDc0N30.nNaxdj6AKGA8HiLso8iwnZl1uMFKOdXWn5bmfoTowWs';
  const supabase = window.supabase.createClient(supabaseUrl, supabaseKey);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
  console.log('üîó –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...');
  console.log('URL:', supabaseUrl);
  console.log('Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', !!supabase);
  
  // –¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  supabase.from('OSP').select('count').limit(1).then(({ data, error }) => {
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
    } else {
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ!');
    }
  });

  // –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å 3 –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
  const questions = [
    // –ü–æ—Å—Ç–∞–≤–∫–∏
    { id: 1, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 15% –±–æ–ª—å—à–µ –ø–æ—Å—Ç–∞–≤–æ–∫, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é (–ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞ —Å—á–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤–æ–∫)', points: 10 },
    { id: 2, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 17% –±–æ–ª—å—à–µ –ø–æ—Å—Ç–∞–≤–æ–∫, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é (–ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞ —Å—á–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤–æ–∫)', points: 20 },
    { id: 3, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 20% –±–æ–ª—å—à–µ –ø–æ—Å—Ç–∞–≤–æ–∫, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é (–ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞ —Å—á–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤–æ–∫)', points: 30 },
    { id: 4, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 23% –±–æ–ª—å—à–µ –ø–æ—Å—Ç–∞–≤–æ–∫, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é (–ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞ —Å—á–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–∞–≤–æ–∫)', points: 40 },
    { id: 5, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–±–æ—á–∏–º –ª–∞–π—Ñ—Ö–∞–∫–æ–º –Ω–∞ —É—Å–∫–æ—Ä–µ–Ω–∏–µ/—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–°—Ç–∞—Ñ—Ñ)', points: 50 },

    // –¢–µ–ª–µ—Ñ–æ–Ω–∏—è
    { id: 7, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 10% –±–æ–ª—å—à–µ –∑–≤–æ–Ω–∫–æ–≤, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é', points: 10 },
    { id: 8, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 12% –±–æ–ª—å—à–µ –∑–≤–æ–Ω–∫–æ–≤, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é', points: 20 },
    { id: 9, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 15% –±–æ–ª—å—à–µ –∑–≤–æ–Ω–∫–æ–≤, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é', points: 30 },
    { id: 10, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ 18% –±–æ–ª—å—à–µ –∑–≤–æ–Ω–∫–æ–≤, —á–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é', points: 40 },
    { id: 11, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–±–æ—á–∏–º –ª–∞–π—Ñ—Ö–∞–∫–æ–º –Ω–∞ —É—Å–∫–æ—Ä–µ–Ω–∏–µ/—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–°—Ç–∞—Ñ—Ñ)', points: 50 },

    // –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏
    { id: 13, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ—Ä–º—É –Ω–∞ 10% –∑–∞ –Ω–µ–¥–µ–ª—é', points: 10 },
    { id: 14, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ—Ä–º—É –Ω–∞ 15% –∑–∞ –Ω–µ–¥–µ–ª—é', points: 20 },
    { id: 15, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –ª–∏–¥ –ø–æ –ª—é–±–æ–º—É –ø—Ä–æ–¥—É–∫—Ç—É –∑–∞ –Ω–µ–¥–µ–ª—é –Ω–∞ —Å–≤–æ–µ–º —É—á–∞—Å—Ç–∫–µ (1 —à—Ç—É–∫–∞)', points: 30 },
    { id: 16, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –ª–∏–¥ –ø–æ –ª—é–±–æ–º—É –ø—Ä–æ–¥—É–∫—Ç—É –∑–∞ –Ω–µ–¥–µ–ª—é –Ω–∞ —Å–≤–æ–µ–º —É—á–∞—Å—Ç–∫–µ (2 —à—Ç—É–∫–∏)', points: 40 },
    { id: 17, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–±–æ—á–∏–º –ª–∞–π—Ñ—Ö–∞–∫–æ–º –Ω–∞ —É—Å–∫–æ—Ä–µ–Ω–∏–µ/—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ (–°—Ç–∞—Ñ—Ñ)', points: 50 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ü–æ—Å—Ç–∞–≤–∫–∏ (10 –±–∞–ª–ª–æ–≤)
    { id: 19, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 1%', points: 10 },
    { id: 20, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –∫–æ–ª–ª–µ–≥–∏ –∏ –¥–∞—Ç—å –û–°', points: 10 },
    { id: 21, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä–∏ —Å–ø–∞—Å–∏–±–∫–∏ –≤ –°—Ç–∞—Ñ—Ñ–µ (—Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—è–º–∏, –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–º–æ—â—å)', points: 10 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ü–æ—Å—Ç–∞–≤–∫–∏ (20 –±–∞–ª–ª–æ–≤)
    { id: 23, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 2%', points: 20 },
    { id: 24, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤ –°—Ç–∞—Ñ—Ñ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é/—Å–º–µ—à–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ä–∞–±–æ—Ç–æ–π/–∫–ª–∏–µ–Ω—Ç–æ–º', points: 20 },
    { id: 25, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ –°—Ç–∞—Ñ—Ñ–µ —Å—Ç–∞—Ç—å—é-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é (–∫–∞—Ñ–µ, —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –∫–∏–Ω–æ, –º–µ—Å—Ç–æ –∏ —Ç–¥)', points: 20 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ü–æ—Å—Ç–∞–≤–∫–∏ (30 –±–∞–ª–ª–æ–≤)
    { id: 27, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 3%', points: 30 },
    { id: 28, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω–∏–µ –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º –∑–∞ –Ω–µ–¥–µ–ª—é –≤–Ω—É—Ç—Ä–∏ –æ—Ñ–∏—Å–∞', points: 30 },
    { id: 29, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü–æ–º–æ–≥–∏ –∫–æ–ª–ª–µ–≥–µ - –°–º–µ–Ω–∞ —É—á–∞—Å—Ç–∫–∞ –Ω–∞ 4 —á–∞—Å–∞', points: 30 },


    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ü–æ—Å—Ç–∞–≤–∫–∏ (40 –±–∞–ª–ª–æ–≤)
    { id: 32, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 4%', points: 40 },
    { id: 33, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü–æ–ª—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ–π –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–ø–∏—Å—å–º–µ–Ω–Ω–æ, –Ω–∞ –ø–æ—á—Ç—É, –≤ —á–∞—Ç, –µ–≥–æ —Å–µ—Ä–≤–∏—Å—ã, –æ—Ç–∫—É—Å —á–µ—Ä–µ–∑ –∏–Ω—Ü–∏–¥–µ–Ω—Ç)', points: 40 },
    { id: 34, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü—Ä–∏–¥—É–º–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞', points: 40 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ü–æ—Å—Ç–∞–≤–∫–∏ (50 –±–∞–ª–ª–æ–≤)
    { id: 36, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 5%', points: 50 },
    { id: 37, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ö–∞–∫ –±—ã —Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π —É—á–∞—Å—Ç–æ–∫ —Ä–∞–±–æ—Ç—ã?', points: 50 },
    { id: 38, category: '–ü–æ—Å—Ç–∞–≤–∫–∏', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–ø–ª–æ—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –≤ —Å–µ–∫—Ç–æ—Ä–µ. –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ç–∏–≤ –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ (–≥–¥–µ 1 —ç—Ç–æ 10 –±–∞–ª–ª–æ–≤ - –∞ 5 —ç—Ç–æ 50 –±–∞–ª–ª–æ–≤), –≤—ã–≤–æ–¥–∏–º —Å—Ä–µ–¥–Ω—é—é - —ç—Ç–æ –∏ –±—É–¥–µ—Ç –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', points: 50 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –¢–µ–ª–µ—Ñ–æ–Ω–∏–∏ (10 –±–∞–ª–ª–æ–≤)
    { id: 39, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 1%', points: 10 },
    { id: 40, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –∫–æ–ª–ª–µ–≥–∏ –∏ –¥–∞—Ç—å –û–°', points: 10 },
    { id: 41, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä–∏ —Å–ø–∞—Å–∏–±–∫–∏ –≤ –°—Ç–∞—Ñ—Ñ–µ (—Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—è–º–∏, –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–º–æ—â—å)', points: 10 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –¢–µ–ª–µ—Ñ–æ–Ω–∏–∏ (20 –±–∞–ª–ª–æ–≤)
    { id: 43, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 2%', points: 20 },
    { id: 44, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤ –°—Ç–∞—Ñ—Ñ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é/—Å–º–µ—à–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ä–∞–±–æ—Ç–æ–π/–∫–ª–∏–µ–Ω—Ç–æ–º', points: 20 },
    { id: 45, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ –°—Ç–∞—Ñ—Ñ–µ —Å—Ç–∞—Ç—å—é-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é (–∫–∞—Ñ–µ, —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –∫–∏–Ω–æ, –º–µ—Å—Ç–æ –∏ —Ç–¥)', points: 20 },
    { id: 46, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ë–∞–ª–ª—ã "–∑–∞ –∫—Ä–∞—Å–∏–≤—ã–µ –≥–ª–∞–∑–∞"', points: 20 },
    { id: 47, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ. –î–∞—Ä–∏–º —Ç–µ–±–µ 20 –±–∞–ª–ª–æ–≤.', points: 20 },
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –¢–µ–ª–µ—Ñ–æ–Ω–∏–∏ (30 –±–∞–ª–ª–æ–≤)
    { id: 48, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 3%', points: 30 },
    { id: 49, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω–∏–µ –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º –∑–∞ –Ω–µ–¥–µ–ª—é –≤–Ω—É—Ç—Ä–∏ –æ—Ñ–∏—Å–∞', points: 30 },
    { id: 50, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü–æ–º–æ–≥–∏ –∫–æ–ª–ª–µ–≥–µ - –°–º–µ–Ω–∞ —É—á–∞—Å—Ç–∫–∞ –Ω–∞ 4 —á–∞—Å–∞', points: 30 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –¢–µ–ª–µ—Ñ–æ–Ω–∏–∏ (40 –±–∞–ª–ª–æ–≤)
    { id: 52, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 4%', points: 40 },
    { id: 53, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü–æ–ª—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ–π –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–ø–∏—Å—å–º–µ–Ω–Ω–æ, –Ω–∞ –ø–æ—á—Ç—É, –≤ —á–∞—Ç, –µ–≥–æ —Å–µ—Ä–≤–∏—Å—ã, –æ—Ç–∫—É—Å —á–µ—Ä–µ–∑ –∏–Ω—Ü–∏–¥–µ–Ω—Ç)', points: 40 },
    { id: 54, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü—Ä–∏–¥—É–º–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞', points: 40 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –¢–µ–ª–µ—Ñ–æ–Ω–∏–∏ (50 –±–∞–ª–ª–æ–≤)
    { id: 56, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ó–∞–≤–µ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é –ª–∏–¥–æ–≤ –±–æ–ª–µ–µ —á–µ–º –Ω–æ—Ä–º–∞ –Ω–∞ 5%', points: 50 },
    { id: 57, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ö–∞–∫ –±—ã —Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π —É—á–∞—Å—Ç–æ–∫ —Ä–∞–±–æ—Ç—ã?', points: 50 },
    { id: 58, category: '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–ø–ª–æ—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –≤ —Å–µ–∫—Ç–æ—Ä–µ. –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ç–∏–≤ –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ (–≥–¥–µ 1 —ç—Ç–æ 10 –±–∞–ª–ª–æ–≤ - –∞ 5 —ç—Ç–æ 50 –±–∞–ª–ª–æ–≤), –≤—ã–≤–æ–¥–∏–º —Å—Ä–µ–¥–Ω—é—é - —ç—Ç–æ –∏ –±—É–¥–µ—Ç –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', points: 50 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ (10 –±–∞–ª–ª–æ–≤)

    { id: 61, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –∑–≤–æ–Ω–æ–∫ –∫–æ–ª–ª–µ–≥–∏ –∏ –¥–∞—Ç—å –û–°', points: 10 },
    { id: 62, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–û—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä–∏ —Å–ø–∞—Å–∏–±–∫–∏ –≤ –°—Ç–∞—Ñ—Ñ–µ (—Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—è–º–∏, –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –ø–æ–º–æ—â—å)', points: 10 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ (20 –±–∞–ª–ª–æ–≤)

    { id: 65, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤ –°—Ç–∞—Ñ—Ñ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—É—é/—Å–º–µ—à–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å —Ä–∞–±–æ—Ç–æ–π/–∫–ª–∏–µ–Ω—Ç–æ–º', points: 20 },
    { id: 66, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ù–∞–ø–∏—Å–∞—Ç—å –≤ –°—Ç–∞—Ñ—Ñ–µ —Å—Ç–∞—Ç—å—é-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é (–∫–∞—Ñ–µ, —Ä–µ—Å—Ç–æ—Ä–∞–Ω, –∫–∏–Ω–æ, –º–µ—Å—Ç–æ –∏ —Ç–¥)', points: 20 },
    { id: 67, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ë–∞–ª–ª—ã "–∑–∞ –∫—Ä–∞—Å–∏–≤—ã–µ –≥–ª–∞–∑–∞"', points: 20 },
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ (30 –±–∞–ª–ª–æ–≤)

    { id: 69, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Å–æ–±—Ä–∞–Ω–∏–µ –ø–æ —Ä–∞—Å—Å—ã–ª–∫–∞–º –∑–∞ –Ω–µ–¥–µ–ª—é –≤–Ω—É—Ç—Ä–∏ –æ—Ñ–∏—Å–∞', points: 30 },
    { id: 70, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü–æ–º–æ–≥–∏ –∫–æ–ª–ª–µ–≥–µ - –°–º–µ–Ω–∞ —É—á–∞—Å—Ç–∫–∞ –Ω–∞ 4 —á–∞—Å–∞', points: 30 },

    { id: 72, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–£–¥–∞—á–∞ –Ω–∞ —Ç–≤–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ. –î–∞—Ä–∏–º —Ç–µ–±–µ 30 –±–∞–ª–ª–æ–≤.', points: 30 },
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ (40 –±–∞–ª–ª–æ–≤)

    { id: 74, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü–æ–ª—É—á–∏—Ç—å –∏–º–µ–Ω–Ω–æ–π –æ—Ç–∑—ã–≤ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞ (–ø–∏—Å—å–º–µ–Ω–Ω–æ, –Ω–∞ –ø–æ—á—Ç—É, –≤ —á–∞—Ç, –µ–≥–æ —Å–µ—Ä–≤–∏—Å—ã, –æ—Ç–∫—É—Å —á–µ—Ä–µ–∑ –∏–Ω—Ü–∏–¥–µ–Ω—Ç)', points: 40 },
    { id: 75, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü—Ä–∏–¥—É–º–∞–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞', points: 40 },

    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–∫–æ–≤ (50 –±–∞–ª–ª–æ–≤)

    { id: 78, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ö–∞–∫ –±—ã —Ç—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª —Å–≤–æ–π —É—á–∞—Å—Ç–æ–∫ —Ä–∞–±–æ—Ç—ã?', points: 50 },
    { id: 79, category: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏', task: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–ø–ª–æ—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–∞ –≤ —Å–µ–∫—Ç–æ—Ä–µ. –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –∫–æ–ª–ª–µ–∫—Ç–∏–≤ –ø–æ 5-–±–∞–ª–ª—å–Ω–æ–π —à–∫–∞–ª–µ (–≥–¥–µ 1 —ç—Ç–æ 10 –±–∞–ª–ª–æ–≤ - –∞ 5 —ç—Ç–æ 50 –±–∞–ª–ª–æ–≤), –≤—ã–≤–æ–¥–∏–º —Å—Ä–µ–¥–Ω—é—é - —ç—Ç–æ –∏ –±—É–¥–µ—Ç –∫–æ–ª-–≤–æ –±–∞–ª–ª–æ–≤ –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', points: 50 },

  ];

  const selectedTasks = [];
  const results = {};

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –±–∞–ª–ª–æ–≤
  function getRandomQuestion(category, points) {
    const availableQuestions = questions.filter(q => 
      q.category === category && Number(q.points) === Number(points)
    );
    if (availableQuestions.length === 0) return null;
    const randomIndex = Math.floor(Math.random() * availableQuestions.length);
    return availableQuestions[randomIndex];
  }
  // window.addEventListener('DOMContentLoaded', renderResultsTable);

  // –ö—ç—à–∏—Ä—É–µ–º —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ DOM-—ç–ª–µ–º–µ–Ω—Ç—ã
  const board = document.querySelector('.jeopardy-board');
  const modal = document.getElementById('modal');
  const modalCategory = document.getElementById('modalCategory');
  const modalTask = document.getElementById('modalTask');
  const modalPoints = document.getElementById('modalPoints');
  const acceptTaskBtn = document.getElementById('acceptTaskBtn');
  const rejectTaskBtn = document.getElementById('rejectTaskBtn');
  const closeModalBtn = document.getElementById('closeModalBtn');
  const surnameInput = document.getElementById('surnameInput');
  const rulesModal = document.getElementById('rulesModal');
  const showRulesBtn = document.getElementById('showRulesBtn');
  const closeRulesModalBtn = document.getElementById('closeRulesModalBtn');
  const resultsSection = document.getElementById('resultsSection');
  const resultsTableBody = document.getElementById('resultsTableBody');
  const resultsModal = document.getElementById('resultsModal');
  const resultsModalTableBody = document.getElementById('resultsModalTableBody');
  const closeResultsModalBtn = document.getElementById('closeResultsModalBtn');
  const showResultsBtn = document.getElementById('showResultsBtn');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  if (!board) {
    console.error('–≠–ª–µ–º–µ–Ω—Ç .jeopardy-board –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä –¥–æ—Å–∫–∏
  const categories = ['–ü–æ—Å—Ç–∞–≤–∫–∏', '–¢–µ–ª–µ—Ñ–æ–Ω–∏—è', '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —É—á–∞—Å—Ç–∫–∏'];
  const pointsOrder = [10, 20, 30, 40, 50];
  
  // –°–æ–∑–¥–∞—ë–º HTML —Å—Ç—Ä–æ–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
  let boardHTML = '';
  
  // –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  categories.forEach(cat => {
    boardHTML += `<div class="category">${cat}</div>`;
  });
  
  // –í–æ–ø—Ä–æ—Å—ã
  pointsOrder.forEach(pointsValue => {
    categories.forEach(cat => {
      const q = questions.find(q => q.category === cat && Number(q.points) === pointsValue);
      if (q) {
        boardHTML += `<div class="question" data-category="${q.category}" data-task="${q.task}" data-points="${q.points}">${q.points}</div>`;
      } else {
        boardHTML += `<div class="question disabled"></div>`;
      }
    });
  });
  
  board.innerHTML = boardHTML;

  // –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  if (showRulesBtn && rulesModal) {
    showRulesBtn.onclick = function() {
      rulesModal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    };
  }
  
  if (closeRulesModalBtn && rulesModal) {
    closeRulesModalBtn.onclick = function() {
      rulesModal.style.display = 'none';
      document.body.style.overflow = '';
    };
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  if (closeResultsModalBtn && resultsModal) {
    closeResultsModalBtn.onclick = function() {
      resultsModal.style.display = 'none';
      document.body.style.overflow = '';
    };
  }

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞
  bindQuestionHandlers();

  // –£–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç exportExcelBtn
  // document.getElementById('exportExcelBtn').onclick = function() {
  //   if (selectedTasks.length === 0) {
  //     alert('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞!');
  //     return;
  //   }
  //   const ws = XLSX.utils.json_to_sheet(selectedTasks);
  //   const wb = XLSX.utils.book_new();
  //   XLSX.utils.book_append_sheet(wb, ws, '–í—ã–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π');
  //   XLSX.writeFile(wb, 'vybor_zadaniy.xlsx');
  // };

  function renderResultsTable() {
    resultsTableBody.innerHTML = '';
    const sorted = Object.entries(results).sort((a, b) => b[1].points - a[1].points);
    
    // –°–æ–∑–¥–∞—ë–º HTML —Å—Ç—Ä–æ–∫—É –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∞
    let tableHTML = '';
    for (const [surname, data] of sorted) {
      tableHTML += `<tr><td class="px-4 py-2 font-bold">${surname}</td><td class="px-4 py-2">${data.points}</td><td class="px-4 py-2">${data.count}</td></tr>`;
    }
    resultsTableBody.innerHTML = tableHTML;
  }

  function loadResultsData() {
    console.log('–§—É–Ω–∫—Ü–∏—è loadResultsData –≤—ã–∑–≤–∞–Ω–∞');
    
    if (!resultsModalTableBody) {
      console.error('–≠–ª–µ–º–µ–Ω—Ç resultsModalTableBody –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
         // –î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
     const resultsData = [
       { surname: '–ó–∞–π—Ü–µ–≤–∞', points: 190 },
       { surname: '–ö—É–∑—å', points: 120 },
       { surname: '–ö–∏—Ç–∞–π—Ü–µ–≤–∞', points: 100 },
       { surname: '–°–≤–∏—Ä–∏–¥—á—É–∫', points: 80 },
       { surname: '–ü–∞–∫', points: 70 },
       { surname: '–ë–µ–ª—è–∫–æ–≤–∞', points: 70 },
       { surname: '–ë–æ—Ä–∏—Å–æ–≤–∞', points: 60 },
       { surname: '–ú–æ—Ä–æ–∑–æ–≤–∞', points: 60 },
       { surname: '–ú–∏—Ö–∞–π–ª–æ–≤—Å–∫–∞—è', points: 50 },
       { surname: '–°—Ç–∞—Ä–∫–æ–≤', points: 30 },
       { surname: '–ò–≤–∞–Ω–æ–≤–∞', points: 30 },
       { surname: '–ú–∞–ª—ã—à–µ–≤–∞', points: 20 },
       { surname: '–í–µ—Ä—Ö–æ–≤—ã—Ö', points: 10 },
       { surname: '–í–µ—Ä–±—É—à–∫–∏–Ω–∞', points: 10 },
       { surname: '–ù–µ–∂–∏–Ω—Å–∫–∞—è', points: 10 },
       { surname: '–ö–∏—Ä—Å–∞–Ω–æ–≤–∞', points: -20 },
       { surname: '–ö–æ–≤–∞–ª–µ–≤', points: -30 },
       { surname: '–õ–∞–ø—à–∏–Ω–∞', points: -60 }
     ];

    console.log('–î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', resultsData);

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –±–∞–ª–ª–∞–º (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    resultsData.sort((a, b) => b.points - a.points);

    // –°–æ–∑–¥–∞—ë–º HTML –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã (–º–µ–¥–∞–ª–∏ –ø–æ –º–µ—Å—Ç–∞–º: 1 ‚Äî ü•á, 2 ‚Äî ü•à, 3 ‚Äî ü•â)
    let tableHTML = '';
    resultsData.forEach((data, index) => {
      const pointsClass = data.points < 0 ? 'text-red-400 font-bold' : 'text-white font-bold';
      const rowClass = data.points >= 0 ? 'hover:bg-white hover:bg-opacity-20' : 'hover:bg-red-500 hover:bg-opacity-20';
      const medal = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : '';
      tableHTML += `
        <tr class="${rowClass} transition-all duration-300" style="border-bottom: 1px solid rgba(255,255,255,0.1);">
          <td class="px-8 py-4 text-white font-semibold text-lg" style="font-family: 'Montserrat', Arial, sans-serif;">
            ${medal} ${data.surname}
          </td>
          <td class="px-8 py-4 text-center ${pointsClass} text-xl" style="font-family: 'Montserrat', Arial, sans-serif;">
            ${data.points > 0 ? '+' : ''}${data.points}
          </td>
        </tr>
      `;
    });
    
    console.log('HTML —Ç–∞–±–ª–∏—Ü—ã:', tableHTML);
    resultsModalTableBody.innerHTML = tableHTML;
    console.log('–¢–∞–±–ª–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
  console.log('showResultsBtn –Ω–∞–π–¥–µ–Ω:', showResultsBtn);
  console.log('resultsModal –Ω–∞–π–¥–µ–Ω:', resultsModal);
  
  if (showResultsBtn) {
    showResultsBtn.addEventListener('click', function() {
      console.log('–ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã" –Ω–∞–∂–∞—Ç–∞');
      
      if (!resultsModal) {
        console.error('resultsModal –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
      resultsModal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
      console.log('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–∏–º—ã–º');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      loadResultsData();
    });
  } else {
    console.error('–ö–Ω–æ–ø–∫–∞ showResultsBtn –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  function bindQuestionHandlers() {
    document.querySelectorAll('.question').forEach(question => {
      question.addEventListener('click', () => {
        const category = question.getAttribute('data-category');
        const points = question.getAttribute('data-points');
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –±–∞–ª–ª–æ–≤
        const randomQuestion = getRandomQuestion(category, points);
        if (!randomQuestion) return;
        
        const task = randomQuestion.task;

        modalCategory.textContent = category;
        modalTask.textContent = task;
        modalPoints.textContent = `${points} –±–∞–ª–ª–æ–≤`;
        surnameInput.value = '';
        acceptTaskBtn.disabled = true;
        acceptTaskBtn.classList.add('opacity-50', 'cursor-not-allowed');
        rejectTaskBtn.disabled = true;
        rejectTaskBtn.classList.add('opacity-50', 'cursor-not-allowed');
        modal.style.display = 'flex';
        closeModalBtn.style.display = 'none'; // —Å–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∑–∞–¥–∞–Ω–∏—è

        surnameInput.oninput = function() {
          if (surnameInput.value.trim().length > 0) {
            acceptTaskBtn.disabled = false;
            acceptTaskBtn.classList.remove('opacity-50', 'cursor-not-allowed');
            rejectTaskBtn.disabled = false;
            rejectTaskBtn.classList.remove('opacity-50', 'cursor-not-allowed');
          } else {
            acceptTaskBtn.disabled = true;
            acceptTaskBtn.classList.add('opacity-50', 'cursor-not-allowed');
            rejectTaskBtn.disabled = true;
            rejectTaskBtn.classList.add('opacity-50', 'cursor-not-allowed');
          }
        };

        acceptTaskBtn.onclick = async () => {
          const surname = surnameInput.value.trim();
          if (!surname) return;
          
          console.log('–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–¥–∞–Ω–∏—è:', { surname, category, task, points });
          
          alert(`–ó–∞–¥–∞–Ω–∏–µ "${task}" –ø—Ä–∏–Ω—è—Ç–æ!\n–§–∞–º–∏–ª–∏—è: ${surname}\n–ë–∞–ª–ª—ã: ${points}`);

          try {
            console.log('–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Supabase...');
            console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', {
              surname: surname,
              category: category,
              task: task,
              points: Number(points),
              status: 'accepted',
              created_at: new Date().toISOString()
            });
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Supabase
            const { data, error } = await supabase.from('OSP').insert([{
              surname: surname,
              category: category,
              task: task,
              points: Number(points),
              status: 'accepted',
              created_at: new Date().toISOString()
            }]);
            
            if (error) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Supabase:', error);
              alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è: ' + error.message);
            } else {
              console.log('‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Supabase:', data);
              alert('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!');
            }
          } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–∏–Ω—è—Ç–∏—è:', err);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–∏–Ω—è—Ç–∏—è: ' + err.message);
          }

          // –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
          selectedTasks.push({
            –§–∞–º–∏–ª–∏—è: surname,
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è: category,
            –ó–∞–¥–∞–Ω–∏–µ: task,
            –ë–∞–ª–ª—ã: points,
            –°—Ç–∞—Ç—É—Å: '–ü—Ä–∏–Ω—è—Ç–æ',
            –í—Ä–µ–º—è: new Date().toLocaleString()
          });
          if (!results[surname]) {
            results[surname] = { points: 0, count: 0 };
          }
          results[surname].points += Number(points);
          results[surname].count += 1;
          renderResultsTable();
          modal.style.display = 'none';
          closeModalBtn.style.display = '';
        };

        rejectTaskBtn.onclick = async function() {
          const surname = surnameInput.value.trim();
          if (!surname) return;
          
          console.log('–û—Ç–∫–∞–∑ –æ—Ç –∑–∞–¥–∞–Ω–∏—è:', { surname, category, task, points });
          
          alert(`–ó–∞–¥–∞–Ω–∏–µ "${task}" –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ!\n–§–∞–º–∏–ª–∏—è: ${surname}`);

          try {
            console.log('–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–∫–∞–∑–∞ –≤ Supabase...');
            console.log('–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', {
              surname: surname,
              category: category,
              task: task,
              points: -Number(points),
              status: 'rejected',
              created_at: new Date().toISOString()
            });
            
            // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Supabase
            const { data, error } = await supabase.from('OSP').insert([{
              surname: surname,
              category: category,
              task: task,
              points: -Number(points), // –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ –æ—Ç–∫–∞–∑
              status: 'rejected',
              created_at: new Date().toISOString()
            }]);
            
            if (error) {
              console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Supabase:', error);
              alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∫–∞–∑–∞: ' + error.message);
            } else {
              console.log('‚úÖ –û—Ç–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase:', data);
              alert('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–∫–∞–∑–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!');
            }
          } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∫–∞–∑–∞:', err);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–∫–∞–∑–∞: ' + err.message);
          }

          // –õ–æ–∫–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
          selectedTasks.push({
            –§–∞–º–∏–ª–∏—è: surname,
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è: category,
            –ó–∞–¥–∞–Ω–∏–µ: task,
            –ë–∞–ª–ª—ã: -Number(points),
            –°—Ç–∞—Ç—É—Å: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
            –í—Ä–µ–º—è: new Date().toLocaleString()
          });
          if (!results[surname]) {
            results[surname] = { points: 0, count: 0 };
          }
          results[surname].points -= Number(points); // –í—ã—á–∏—Ç–∞–µ–º –±–∞–ª–ª—ã
          results[surname].count += 1;
          renderResultsTable();
          modal.style.display = 'none';
          closeModalBtn.style.display = '';
        };

        closeModalBtn.onclick = function() {
          modal.style.display = 'none';
          closeModalBtn.style.display = '';
        };
      });
    });
  }
}; 
